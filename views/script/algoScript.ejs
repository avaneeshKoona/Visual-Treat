<script> 
  /*
  *************************************************
      CODE BY : AVANEESH KOONA
      GIHUB   : https://github.com/avaneeshKoona
      E-MAIL  : kavaneesh19@gmail.com
  *************************************************
*/

var arr = [];   //Globally declared array

var speedSlider = document.getElementById("speed"); 
var SPEED = 367-parseInt(speedSlider.value,10);

speedSlider.addEventListener("change", function () {
  SPEED = 367-parseInt(speedSlider.value,10);
  console.log(SPEED);
});


  while(arr.length < 40){
    var r = Math.floor(Math.random() * 50) + 1;
    if(arr.indexOf(r) === -1) arr.push(r);
  } 

  window.onload =  async function() {
    await generateArray();
  }


  async function generateArray(){  // generateArray function
    var eleClass = document.getElementById("div0");
    if(eleClass!=null)
    {
      for(var i=0; i < arr.length; i++)
      {
        document.getElementById("div"+i).remove();
      }

      arr = [];

      while(arr.length < 40){
       var r = Math.floor(Math.random() * 50) + 1;
       if(arr.indexOf(r) === -1) arr.push(r);
      }    
      
      document.getElementsByClassName("heading")[0].innerHTML = "GO FOR IT !!";

    }

    document.getElementById("generateArray").disabled = true;
    document.getElementById("startBtn").disabled = true;

      for(var i=0;i<40;i++)
    {
      let newBar = document.createElement("div");
        newBar.setAttribute("class", "ele");

        newBar.setAttribute("id", "div"+i);

        document.getElementById("arrayWindow").appendChild(newBar);
        document.getElementById("div"+i).innerHTML = arr[i];
        document.getElementById("div"+i).style.height = arr[i]*10+"px";
        await new Promise((resolve,reject) => setTimeout(resolve,17));
    }
    document.getElementById("generateArray").disabled = false;
    document.getElementById("startBtn").disabled = false;
    
  }



//SEARCHING IMPLEMENTATION//

async function search()
{
  var key = document.getElementById("key").value;
  var chosenMethod = document.getElementsByName("searchType");
  var searchMethod;

    for(var i=0; i<chosenMethod.length;i++)
    {
      if(chosenMethod[i].checked)
      {
        searchMethod = chosenMethod[i].value;
      }
    } 


  if(key==""||searchMethod==null)
  {
    if(key==""&&searchMethod==null)
      alert("please choose a Search method and also give a key to search :)");
    else if(searchMethod==null) 
      alert("please choose a Search method :)"); 
    else
      alert("please give a key to search :)");
    return;
  }

  if(isNaN(parseInt(key,10)))
  {
    alert("key must be a number :)");
    return;
  }

  for(var i=0; i < arr.length; i++)
  {
    var color = document.getElementById("div"+i).style.backgroundColor;
    if(color == "green")
    {
      document.getElementById("div"+i).style.backgroundColor =  "rgba(247, 231, 7, 0.651)";
      break;
    }
  }


  document.getElementsByClassName("heading")[0].innerHTML="PROCESSING...";
  document.getElementById("generateArray").disabled = true;
  document.getElementById("startBtn").disabled = true;

  var verdict;
 
 switch(searchMethod)
 {
    case "linearSearch":
      verdict = await linearSearch(parseInt(key,10));
      break;
    case "binarySearch":
      await helperSort();
      verdict = await binarySearch(0,39,parseInt(key,10));
      break;
    default:
      alert("please choose a method to search :)");
      break;    
 }
 
 if(verdict==true)
  document.getElementsByClassName("heading")[0].innerHTML="FOUND IT :)";
 else
  document.getElementsByClassName("heading")[0].innerHTML="NOT FOUND :(";
 document.getElementById("generateArray").disabled = false;
 document.getElementById("startBtn").disabled = false;

}

async function helperSort()
  {
    await arr.sort(function(a,b){return a-b});
    for(var i=0;i<arr.length;i++)
    {
      document.getElementById("div"+i).style.height = arr[i]*10+"px";
      document.getElementById("div"+i).innerHTML = arr[i];
      await new Promise((resolve,reject) => setTimeout(resolve,17));
    }
  }

<%-include("algorithms/searching/linearSearch")%> 
<%-include("algorithms/searching/binarySearch")%>



// SORTING IMPLEMENTATION//
  
  async function sort(l,h)
  {
    var chosenMethod = document.getElementsByName("sortType");
    var sortMethod;

    for(var i=0; i<chosenMethod.length;i++)
    {
      if(chosenMethod[i].checked)
      {
        sortMethod = chosenMethod[i].value;
      }
    }

    if(sortMethod==null)
  {
    alert("please choose a sorting method :)");
    return;
  }

    document.getElementsByClassName("heading")[0].innerHTML="PROCESSING...";
    document.getElementById("generateArray").disabled = true;
    document.getElementById("startBtn").disabled = true;

    switch(sortMethod)
    {
      case "bubbleSort":
        await bubbleSort(); 
        console.log(arr);
        break;

      case "insertionSort":
        await insertionSort();
        break;

      case "selectionSort":
        await selectionSort();
        break;  

      case "mergeSort": 
        await merge(l,h);
        break;

      default: 
        alert("please choose a sorting method :)");
        break;
    }
    console.log(arr);
    document.getElementsByClassName("heading")[0].innerHTML = "YOU DID IT :)"
    document.getElementById("generateArray").disabled = false;
    document.getElementById("startBtn").disabled = false;

  }

<%-include("algorithms/sorting/bubbleSort")%>
<%-include("algorithms/sorting/insertionSort")%> 
<%-include("algorithms/sorting/selectionSort")%> 
<%-include("algorithms/sorting/mergeSort")%> 

</script>

